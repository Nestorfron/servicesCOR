"""empty message

Revision ID: df871c9449a0
Revises: 
Create Date: 2025-01-07 06:44:10.886709

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'df871c9449a0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('contact_person', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('providers',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('contact_person', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('zone', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('branches',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('customer_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('Social_Registration', sa.BigInteger(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('colony', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('municipality', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('contact_1', sa.String(length=100), nullable=True),
    sa.Column('phone_1', sa.String(length=100), nullable=True),
    sa.Column('contact_2', sa.String(length=100), nullable=True),
    sa.Column('phone_2', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('schredule', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('branches', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_branches_customer_id'), ['customer_id'], unique=False)

    op.create_table('engineers',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('provider_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('engineers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_engineers_provider_id'), ['provider_id'], unique=False)

    op.create_table('tickets',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('customer_id', sa.BigInteger(), nullable=False),
    sa.Column('provider_id', sa.BigInteger(), nullable=False),
    sa.Column('engineer_id', sa.BigInteger(), nullable=False),
    sa.Column('branch_id', sa.BigInteger(), nullable=False),
    sa.Column('folio', sa.BigInteger(), nullable=True),
    sa.Column('folio_TIB', sa.BigInteger(), nullable=True),
    sa.Column('Social_Registration', sa.BigInteger(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('colony', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('municipality', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('contact_1', sa.String(length=100), nullable=True),
    sa.Column('phone_1', sa.String(length=100), nullable=True),
    sa.Column('contact_2', sa.String(length=100), nullable=True),
    sa.Column('phone_2', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('service', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('return_process', sa.Boolean(), nullable=True),
    sa.Column('billing_status', sa.String(length=20), nullable=False),
    sa.Column('payment_status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['engineer_id'], ['engineers.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tickets', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tickets_branch_id'), ['branch_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tickets_customer_id'), ['customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tickets_engineer_id'), ['engineer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tickets_provider_id'), ['provider_id'], unique=False)

    op.create_table('history_tickets',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('ticket_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('history_tickets', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_history_tickets_ticket_id'), ['ticket_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_history_tickets_user_id'), ['user_id'], unique=False)

    op.create_table('invoices',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('ticket_id', sa.BigInteger(), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('invoice_date', sa.Date(), nullable=True),
    sa.Column('payment_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_invoices_ticket_id'), ['ticket_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_invoices_ticket_id'))

    op.drop_table('invoices')
    with op.batch_alter_table('history_tickets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_history_tickets_user_id'))
        batch_op.drop_index(batch_op.f('ix_history_tickets_ticket_id'))

    op.drop_table('history_tickets')
    with op.batch_alter_table('tickets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tickets_provider_id'))
        batch_op.drop_index(batch_op.f('ix_tickets_engineer_id'))
        batch_op.drop_index(batch_op.f('ix_tickets_customer_id'))
        batch_op.drop_index(batch_op.f('ix_tickets_branch_id'))

    op.drop_table('tickets')
    with op.batch_alter_table('engineers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_engineers_provider_id'))

    op.drop_table('engineers')
    with op.batch_alter_table('branches', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_branches_customer_id'))

    op.drop_table('branches')
    op.drop_table('users')
    op.drop_table('providers')
    op.drop_table('customers')
    # ### end Alembic commands ###
